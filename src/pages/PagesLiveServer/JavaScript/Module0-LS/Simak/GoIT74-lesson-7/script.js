// function foo() {
//   return 5; // —è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
// }

// const foo = () => 5; // –Ω–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è

//! ===============

//? Example 1 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

//* createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.

//* logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å

//* logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

const products = [
  {
    name: "apple",
    price: 15,
    quantity: 30,
  },
  {
    name: "cherry",
    price: 40,
    quantity: 50,
  },
];

// function createProduct(obj, callback) {
//   const product = { ...obj, id: Date.now() };
//   callback(product);
//   //   callback({ ...obj, id: Date.now() });
// }

// // function declaration
// function logProduct({ name, price, quantity }) {
//   console.log(
//     `–ù–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É: ${name}. –¶—ñ–Ω–∞ –∑–∞ –∫—ñ–ª–æ–≥—Ä–∞–º: ${price} –≥—Ä–Ω. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥—ñ: ${quantity} –∫–≥.`
//   );
// }

// function logTotalPrice({ name, price, quantity }) {
//   console.log(
//     `–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤ ${name} –Ω–∞ —Å–∫–ª–∞–¥—ñ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å ${
//       price * quantity
//     } –≥—Ä–Ω`
//   );
// }

// createProduct(products[0], logTotalPrice);
// createProduct(products[0], logProduct);

//! ===============

//? Example 2 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó

//* –î–æ–¥–∞–π—Ç–µ –æ–±'—î–∫—Ç account –º–µ—Ç–æ–¥–∏ withdraw(amount, onSuccess, onError) —Ç–∞ deposit(amount, onSuccess, onError), –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.

//* –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ this.balance, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

//* –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// const TRANSACTION_LIMIT = 1000;

// const account = {
//   username: "Alex",
//   balance: 1500,
//   withdraw(amount, onSuccess, onError) {
//     /*
//     –ó–Ω–∞—Ç—Ç—è –∫–æ—à—Ç—ñ–≤:
//         1. —á–∏ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î amount –Ω–∞—à –ª—ñ–º—ñ—Ç
//         2. —á–∏ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î amount –Ω–∞—à –±–∞–ª–∞–Ω—Å
//     */

//     if (amount > TRANSACTION_LIMIT) {
//       onError(
//         `–í–∏ –ø–µ—Ä–µ–≤–∏—â–∏–ª–∏ –ª—ñ–º—ñ—Ç. –ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç —Å–∫–ª–∞–¥–∞—î ${TRANSACTION_LIMIT} –≥—Ä–Ω`
//       );
//     } else if (amount > this.balance) {
//       onError(
//         `–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤. –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Å–∫–ª–∞–¥–∞—î ${this.balance} –≥—Ä–Ω`
//       );
//     } else {
//       this.balance -= amount;
//       onSuccess(`–£—Å–ø—ñ—à–Ω–æ –∑–Ω—è—Ç–æ! –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Å–∫–ª–∞–¥–∞—î ${this.balance} –≥—Ä–Ω`);
//     }
//   },
//   deposit(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       onError(
//         `–í–∏ –ø–µ—Ä–µ–≤–∏—â–∏–ª–∏ –ª—ñ–º—ñ—Ç. –ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç —Å–∫–ª–∞–¥–∞—î ${TRANSACTION_LIMIT} –≥—Ä–Ω`
//       );
//     } else if (amount <= 0) {
//       onError(
//         `–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑. –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Å–∫–ª–∞–¥–∞—î ${this.balance} –≥—Ä–Ω`
//       );
//     } else {
//       this.balance += amount;
//       onSuccess(
//         `–£—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ! –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Å–∫–ª–∞–¥–∞—î ${this.balance} –≥—Ä–Ω`
//       );
//     }
//   },
// };

// const onSuccess = (msg) => console.log(`–£—Å–ø—ñ—à–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è! ${msg}`);
// const onError = (msg) => console.error(`–ù–µ–≤–¥–∞–ª–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è! ${msg}`);

// function onSuccess(msg) {
//   console.log(`–£—Å–ø—ñ—à–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è! ${msg}`);
// }

// function onError(msg) {
//   console.error(`–ù–µ–≤–¥–∞–ª–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è! ${msg}`);
// }

// account.withdraw(700, onSuccess, onError);
// account.deposit(900, onSuccess, onError);
// account.deposit(1000, onSuccess, onError);
// account.deposit(-10, onSuccess, onError);

//! ===============

//? Example 3 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó + —Å—Ç—Ä—ñ–ª–∫–∏

//* –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤, –∞ –¥—Ä—É–≥–∏–º - —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É. –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫–∞.

// [1,2,3] -> [2,3,4]
// f (n) => n+1

/*
    1. —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –∫—É–¥–∏ –º–∏ –±—É–¥–µ–º–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–º—ñ–Ω–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–∞—Ä–æ–≥–æ
    2. –ø–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
        2.1. –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –∫–æ–ª–±–µ–∫ —Ñ-—Ü—ñ—é –Ω–∞ –ø–æ—Ç–æ—á–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ –º–∞—Å–∏–≤—É
        2.2. —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–ª–±–µ–∫ —Ñ-—Ü—ñ—ó –∑–∞–ø—É—à–∏—Ç–∏ —É –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
    3. –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
*/

// function each(array, callback) {
//   const newArray = [];
//   //   for (const element of array) {
//   //     newArray.push(callback(element));
//   //     // const newElement = callback(element);
//   //     // newArray.push(newElement);
//   //   }

//   //   array.forEach((element, i, arr) => {
//   //     // console.log(element);
//   //     console.log(arr);
//   //   });
//   array.forEach((element) => newArray.push(callback(element)));

//   return newArray;
// }

// const addOne = (n) => n + 1;
// const pow = (n) => n * n;

// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// console.log(each(arr, (n) => n + 1));
// console.log(each(arr, pow));

//! ===============

const user1 = {
  name: "Oleg",
  age: 25,
};
const user2 = {
  name: "Alex",
  age: 55,
};
const user3 = {
  name: "Nastya",
  age: 35,
};

function calculateDateOfBirth({ age }) {
  return 2023 - age;
}

const dateOfBirthUser1 = calculateDateOfBirth(user1);
console.log("üöÄ ~ dateOfBirthUser1:", dateOfBirthUser1);
const dateOfBirthUser2 = calculateDateOfBirth(user2);
console.log("üöÄ ~ dateOfBirthUser2:", dateOfBirthUser2);
const dateOfBirthUser3 = calculateDateOfBirth(user3);
console.log("üöÄ ~ dateOfBirthUser3:", dateOfBirthUser3);

const newArray = new Array(10).fill(1);
console.log(newArray);
